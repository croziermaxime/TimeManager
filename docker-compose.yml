version: "3.8"

services:
  postgres-database:
    image: postgres:alpine3.18
    container_name: postgres-database
    restart: always
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    #ports:
    #  - 5432:5432
    networks:
      time_manager_network:
        ipv4_address: 172.21.0.3

  backend:
    image: timemanagercr.azurecr.io/backend:latest
    container_name: backend
    build:
      context: API/
      dockerfile: ./Dockerfile
    depends_on:
      postgres-database:
        condition: service_started
    restart: always
    #ports:
    #  - 4000:4000
    networks:
      time_manager_network:
        ipv4_address: 172.21.0.4
    command: sh ./shell.sh

  frontend:
    image: timemanagercr.azurecr.io/frontend:latest
    build: ./Front/TimeManager
    container_name: frontend
    ports:
      - 8080:8080
    depends_on:
      backend:
        condition: service_started
    networks:
      time_manager_network:
        ipv4_address: 172.21.0.2

  #pgadmin:
  #  image: dpage/pgadmin4
  #  container_name: pgadmin4_container
  #  restart: always
  #  ports:
  #    - "5050:80"
  #  tty: true
  #  environment:
  #    PGADMIN_DEFAULT_EMAIL: raj@nola.com
  #    PGADMIN_DEFAULT_PASSWORD: admin
  #  volumes:
  #    - pgadmin-data:/var/lib/pgadmin

networks:
  time_manager_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
          gateway: 172.21.0.1

volumes:
  pgadmin-data: